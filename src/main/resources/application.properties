
##H2 Database
#spring.application.name=First-Project
#spring.h2.console.enabled = true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.generate-ddl = true
#spring.jpa.show-sql = true
##spring.jpa.hibernate.ddl-auto = create-drop
#spring.jpa.hibernate.ddl-auto = update


#Postgresql

spring.datasource.url = jdbc:postgresql://localhost:5432/jobapp
spring.datasource.username = saqlain
spring.datasource.password = saqlain
spring.jpa.database = POSTGRESQL
spring.jpa.show-sql = true
# tells to automatically create and drop the database, schema created when the session is created
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect








#acutator
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details=always
info.app.name=JobApplication
info.app.description=Job app built by Saqlain
management.info.env.enabled=true
management.endpoint.shutdown.enabled=true
server.shutdown=true
# docker run -d --name db -e POSTGRES_PASSWORD = embarkx postgress
## In above we have not specified what we want that is postgres:latest
# docker ps states which containers running...

#docker run -d --name pgadmin -e PGADMIN_DEFAULT_EMAIL=admin@admin.com -e PGADMIN_DEFAULT_PASSWORD=embarkx dpage/pgadmin4

#docker exec -it pgadmin ping db

# ---> exec helps to execute command in docker container, it means interactive console use for input and output then pgadmin is the name of the container
# ---> ping db is the command... ping basically tells about the reachability of a network helps us to know whether we can communicate with db container or not
# the above will give bad error as we currently don't have network connectivity
# to build connectivity lets remove the db image from docker


#-d running container in detached mode
#-v use to mount a docker volume

#creating docker networks....
# docker network create my-network, tools to check network reachability for a particular host
#docker run -d --name db --network my-network -e POSTGRES_PASSWORD=mysecretpassword postgres
#docker run -d --name pgadmin --network my-network -e PGADMIN_DEFAULT_EMAIL=user@domain.com -e PGADMIN_DEFAULT_PASSWORD=SuperSecret dpage/pgadmin4
# docker compose is used to manage multiple docker comtainers
# Each container will run as a service
